// ===== variables =====
$stage-bg: #f5f5f7;
$circle-color: #000;
$circle-size: 360px;
$handle-size: 30px;
$eraser-color: $stage-bg;

$debug-handles: false;

// временные параметры — всё медленнее
$dur-circle: 0.2s;   // круг → квадрат
$dur-grow: 1.4s;     // рост стиралок
$dur-square: 0.8s;   // стиралки → квадрат
$ease: cubic-bezier(.4, .0, 0.2, 1);
$t-bar-top: 75%; // «первая четверть от низа» ⇒ 75% от верха
$t-scale-x: 7;      // насколько «далеко» растягиваем в горизонт
$t-scale-y: 10.7;    // итоговая толщина перекладины (по высоте)
$t-y: 75; // проценты от верха: 75 ~ «первая четверть снизу»

$t-bar-y: 75;        // уровень перекладины T (0..100 сверху вниз)
$t-thickness: 14;    // высота прямоугольника (viewBox units)
$t-base-width: 10;   // стартовая ширина
$t-grow-x: 3.6;      // во сколько раз растянем по X (не по Y!)
$t-corner-start: 6px; // начальное скругление (визуально как «таблетка»)


$gap: .01s; // пауза между фазами/буквами

// ===== base =====
*,
*::before,
*::after { box-sizing: border-box; }

html, body { height: 100%; }

body {
  margin: 0;
  font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
  background: $stage-bg;
  color: #111;
}

// ===== layout =====
.stage {
  min-height: 100dvh;
  display: grid;
  place-items: center;
  gap: 24px;
  padding: 24px;
  background: $stage-bg;
}

.stage { --eraser: #{$stage-bg}; }


.ui-btn {
  appearance: none;
  border: 1px solid rgba(0,0,0,.15);
  background: white;
  padding: .6rem 1rem;
  border-radius: 10px;
  cursor: pointer;
  font-weight: 600;
}

.word {
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: max-content;
  gap: 32px; /* расстояние между кругами */
  align-items: center;
}



// ===== circle =====
.circle {
  width: $circle-size;
  height: $circle-size;
  background: $circle-color;
  border-radius: 50%;
  position: relative;
  overflow: hidden; // ← было visible

  &--t{}
}

.circle--t {
  position: relative;
  overflow: hidden; // важно, чтобы ничего не вылезало в соседние буквы
}

.t-handles {
  position: absolute;
  inset: 0;      // растянуть SVG по кругу
  width: 100%;
  height: 100%;
  display: block;
}

.t-rect {
  fill: var(--eraser);
  /* ниже — чтобы трансформации были предсказуемыми */
  transform-box: fill-box;
  transform-origin: 50% 50%;
}

.circle--t { position: relative; overflow: hidden; }

.t-handles {
  position: absolute; inset: 0;
  width: 100%; height: 100%; display: block;
}

.t-rect {
  fill: var(--eraser);                 // «ластик»
  transform-box: fill-box;
  transform-origin: 50% 50%;
}

/* якорим рост по X к центру каждой таблетки */
.t-rect--left  { transform-origin: 100% 50%; } // растёт вправо (от центра к внешнему краю)
.t-rect--right { transform-origin:   0% 50%; } // растёт влево



// ===== handles =====
.handle {
  width: $handle-size;
  height: $handle-size;
  background: $eraser-color;
  border-radius: 50%;
  position: absolute;
  transform: translate(-50%, -50%) scale(1);
  will-change: transform, border-radius;

  &--top {
    top: 10dvh; left: 50%;
    transform-origin: 50% 100%;
  }

  &--bottom {
    bottom: 10dvh; left: 50%;
    transform-origin: 50% 0%;
    transform: translate(-50%, 50%) scale(1);
  }
}

.handle--left {
  left: 10dvh; top: 50%;
  transform: translate(-50%, -50%) scale(1);
  transform-origin: 100% 50%; /* якорь справа — растёт влево при будущем scale */
}
.handle--t-left {
  /* отступ от левого края круга, как и в «I» — оставляю твои 10dvh */
  left: 10dvh;
  /* вертикальное положение полосы T */
  top: $t-bar-top;
  /* центрируем кружок относительно точки */
  transform: translate(-50%, -50%) scale(1);
  /* якорим масштаб к правому краю, чтобы расти вправо/влево корректно в анимации */
  transform-origin: 100% 50%;
}
.handle--right {
  right: 10dvh; top: 50%;
  transform: translate(50%, -50%) scale(1);
  transform-origin: 0% 50%; /* якорь слева — растёт вправо при будущем scale */
}
.handle--t-right {
  right: 10dvh;
  top: $t-bar-top;
  transform: translate(50%, -50%) scale(1);
  transform-origin: 0% 50%;
}

// ===== keyframes =====
@keyframes circle-to-square {
  from { border-radius: 50%; }
  to   { border-radius: 0; }
}

@keyframes handle-grow-top {
  from { transform: translate(-50%, -50%) scale(1); }
  to   { transform: translate(-50%, -60%) scale(6.2); }
}

@keyframes handle-grow-bottom {
  from { transform: translate(-50%, 50%) scale(1); }
  to   { transform: translate(-50%, 60%) scale(6.2); }
}

@keyframes handle-to-square {
  from { border-radius: 50%; }
  to   { border-radius: 0; }
}

@keyframes handle-grow-left {
  from { transform: translate(-50%, -50%) scale(1,1); }
  to   { transform: translate(-10%, -50%) scale(6.2, 6.2); } // смещение влево + масштаб
}
@keyframes handle-grow-right {
  from { transform: translate(50%, -50%) scale(1,1); }
  to   { transform: translate(10%, -50%) scale(6.2, 6.2); }  // смещение вправо + масштаб
}

/* рост: «круглый прямоугольник» увеличивается равномерно (векторно, без мыла) */
@keyframes t-grow-svg {
  from { transform: scale(1, 1); }
  to   { transform: scale(#{$t-scale-x}, #{$t-scale-y}); }
}

/* скруглённые углы -> прямоугольные (в пикселях, чтобы IDE не ругался) */
@keyframes t-round-to-rect {
  from { rx: $t-corner-start; }
  to   { rx: 0px; }
}

//@keyframes t-grow-x {
//  from { transform: scaleX(1); }
//  to   { transform: scaleX(#{$t-grow-x}); }
//}

@keyframes t-grow-x {
  from { transform: scale(1, 1); }
  to   { transform: scale(#{$t-scale-x}, #{$t-scale-y}); }
}





// ===== Анимашечка =====
.stage.is-playing {
  .circle--h {
    animation: circle-to-square ($dur-circle+1s) $ease forwards;

    .handle--top {
      animation:
              handle-grow-top   $dur-grow   $ease forwards,
              handle-to-square  $dur-square $ease forwards;
      animation-delay: $dur-circle, ($dur-circle);
    }
    .handle--bottom {
      animation:
              handle-grow-bottom $dur-grow   $ease forwards,
              handle-to-square   $dur-square $ease forwards;
      animation-delay: $dur-circle, ($dur-circle);
    }
  }
  .circle--i {
    // 1) круг I → квадрат
    animation: circle-to-square ($dur-circle+1s) $ease forwards;

    // 2) стиралки I: рост → 3) квадрат
    .handle--left {
      animation:
              handle-grow-left  $dur-grow   $ease forwards,
              handle-to-square  $dur-square $ease forwards;
      animation-delay: ($dur-circle),               // после круга I
              ($dur-circle);
    }

    .handle--right {
      animation:
              handle-grow-right $dur-grow   $ease forwards,
              handle-to-square  $dur-square $ease forwards;
      animation-delay: ($dur-circle),
              ($dur-circle);
    }
  }
  .circle--t {
    animation: circle-to-square ($dur-circle+1s) $ease forwards;

    .t-rect--left,
    .t-rect--right {
      /* 2) растём по X → 3) убираем скругление */
      animation:
              t-grow-x        $dur-grow   $ease forwards,
              t-round-to-rect $dur-square $ease forwards;
      animation-delay: ($dur-circle),
              ($dur-circle);
    }
  }
}


// ===== адаптив для проституток =====
@media (max-width: 480px) {
  $circle-size: 260px !global;
  $handle-size: 22px !global;
  .circle { width: $circle-size; height: $circle-size; }
  .handle { width: $handle-size; height: $handle-size; }
}
