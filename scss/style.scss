// ===== variables =====
$stage-bg: #f5f5f7;
$circle-color: #000;
$circle-size: 360px;
$handle-size: 30px;
$eraser-color: $stage-bg;

$debug-handles: false;

// временные параметры — всё медленнее
$dur-circle: 1.2s;   // круг → квадрат
$dur-grow: 1.4s;     // рост стиралок
$dur-square: 0.8s;   // стиралки → квадрат
$ease: cubic-bezier(.4, .0, 0.2, 1);

$gap: .2s; // пауза между фазами/буквами

// ===== base =====
*,
*::before,
*::after { box-sizing: border-box; }

html, body { height: 100%; }

body {
  margin: 0;
  font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
  background: $stage-bg;
  color: #111;
}

// ===== layout =====
.stage {
  min-height: 100dvh;
  display: grid;
  place-items: center;
  gap: 24px;
  padding: 24px;
  background: $stage-bg;
}

.ui-btn {
  appearance: none;
  border: 1px solid rgba(0,0,0,.15);
  background: white;
  padding: .6rem 1rem;
  border-radius: 10px;
  cursor: pointer;
  font-weight: 600;
}

.word {
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: max-content;
  gap: 32px; /* расстояние между кругами */
  align-items: center;
}



// ===== circle =====
.circle {
  width: $circle-size;
  height: $circle-size;
  background: $circle-color;
  border-radius: 50%;
  position: relative;
  overflow: hidden; // ← было visible
}


// ===== handles =====
.handle {
  width: $handle-size;
  height: $handle-size;
  background: $eraser-color;
  border-radius: 50%;
  position: absolute;
  transform: translate(-50%, -50%) scale(1);
  will-change: transform, border-radius;

  &--top {
    top: 10dvh; left: 50%;
    transform-origin: 50% 100%;
  }

  &--bottom {
    bottom: 10dvh; left: 50%;
    transform-origin: 50% 0%;
    transform: translate(-50%, 50%) scale(1);
  }
}

.handle--left {
  left: 10dvh; top: 50%;
  transform: translate(-50%, -50%) scale(1);
  transform-origin: 100% 50%; /* якорь справа — растёт влево при будущем scale */
}
.handle--right {
  right: 10dvh; top: 50%;
  transform: translate(50%, -50%) scale(1);
  transform-origin: 0% 50%; /* якорь слева — растёт вправо при будущем scale */
}

// ===== keyframes =====
@keyframes circle-to-square {
  from { border-radius: 50%; }
  to   { border-radius: 0; }
}

@keyframes handle-grow-top {
  from { transform: translate(-50%, -50%) scale(1); }
  to   { transform: translate(-50%, -60%) scale(6.2); }
}

@keyframes handle-grow-bottom {
  from { transform: translate(-50%, 50%) scale(1); }
  to   { transform: translate(-50%, 60%) scale(6.2); }
}

@keyframes handle-to-square {
  from { border-radius: 50%; }
  to   { border-radius: 0; }
}

@keyframes handle-grow-left {
  from { transform: translate(-50%, -50%) scale(1); }
  to   { transform: translate(-60%, -50%) scale(6.2); } // смещение влево + масштаб
}
@keyframes handle-grow-right {
  from { transform: translate(50%, -50%) scale(1); }
  to   { transform: translate(60%, -50%) scale(6.2); }  // смещение вправо + масштаб
}


// ===== последовательность =====
.stage.is-playing {
  .circle--h {
    animation: circle-to-square $dur-circle $ease forwards;

    .handle--top {
      animation:
              handle-grow-top   $dur-grow   $ease forwards,
              handle-to-square  $dur-square $ease forwards;
      animation-delay: $dur-circle, ($dur-circle + $dur-grow + 0.1s);
    }
    .handle--bottom {
      animation:
              handle-grow-bottom $dur-grow   $ease forwards,
              handle-to-square   $dur-square $ease forwards;
      animation-delay: $dur-circle, ($dur-circle + $dur-grow + 0.1s);
    }
  }
  .circle--i {
    // 1) круг I → квадрат
    animation: circle-to-square $dur-circle $ease forwards;

    // 2) стиралки I: рост → 3) квадрат
    .handle--left {
      animation:
              handle-grow-left  $dur-grow   $ease forwards,
              handle-to-square  $dur-square $ease forwards;
      animation-delay: ($dur-circle),               // после круга I
              ($dur-circle + $dur-grow + .1s);
    }

    .handle--right {
      animation:
              handle-grow-right $dur-grow   $ease forwards,
              handle-to-square  $dur-square $ease forwards;
      animation-delay: ($dur-circle),
              ($dur-circle + $dur-grow + .1s);
    }
  }
}


// ===== адаптив =====
@media (max-width: 480px) {
  $circle-size: 260px !global;
  $handle-size: 22px !global;
  .circle { width: $circle-size; height: $circle-size; }
  .handle { width: $handle-size; height: $handle-size; }
}
